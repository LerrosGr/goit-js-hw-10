{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst btnStart = document.querySelector('[data-start]');\nconst inputCalendar = document.querySelector('#datetime-picker');\nconst showTime = document.querySelectorAll('.value');\n\nlet userSelectedDate;\nlet timeInterval;\n\nbtnStart.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    timeInterval = userSelectedDate - new Date();\n\n    if (timeInterval < 1) {\n      iziToast.error({\n        position: 'topRight',\n        message: `Please choose a date in the future`,\n      }),\n        (btnStart.disabled = true);\n    } else {\n      btnStart.disabled = false;\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nconst fp = flatpickr(inputCalendar, options);\n\nbtnStart.addEventListener('click', handleTimer);\nfunction handleTimer(event) {\n  btnStart.disabled = true;\n  inputCalendar.disabled = true;\n  const timer = setInterval(() => {\n    const timeInterval = userSelectedDate.getTime() - Date.now();\n\n    const time = convertMs(timeInterval);\n    showTime[0].textContent = time.days.toString().padStart(2, '0');\n    showTime[1].textContent = time.hours.toString().padStart(2, '0');\n    showTime[2].textContent = time.minutes.toString().padStart(2, '0');\n    showTime[3].textContent = time.seconds.toString().padStart(2, '0');\n    if (timeInterval < 1000) clearInterval(timer);\n  }, 1000);\n}\n"],"names":["btnStart","inputCalendar","showTime","userSelectedDate","timeInterval","options","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","flatpickr","handleTimer","event","timer","time"],"mappings":"6vBAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAgB,SAAS,cAAc,kBAAkB,EACzDC,EAAW,SAAS,iBAAiB,QAAQ,EAEnD,IAAIC,EACAC,EAEJJ,EAAS,SAAW,GAEpB,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAClCF,EAAeD,EAAmB,IAAI,KAElCC,EAAe,GACjBG,EAAS,MAAM,CACb,SAAU,WACV,QAAS,oCACjB,CAAO,EACEP,EAAS,SAAW,IAEvBA,EAAS,SAAW,EAEvB,CACH,EAEA,SAASQ,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAMWC,EAAUb,EAAeI,CAAO,EAE3CL,EAAS,iBAAiB,QAASe,CAAW,EAC9C,SAASA,EAAYC,EAAO,CAC1BhB,EAAS,SAAW,GACpBC,EAAc,SAAW,GACzB,MAAMgB,EAAQ,YAAY,IAAM,CAC9B,MAAMb,EAAeD,EAAiB,QAAS,EAAG,KAAK,IAAG,EAEpDe,EAAOV,EAAUJ,CAAY,EACnCF,EAAS,CAAC,EAAE,YAAcgB,EAAK,KAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC9DhB,EAAS,CAAC,EAAE,YAAcgB,EAAK,MAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC/DhB,EAAS,CAAC,EAAE,YAAcgB,EAAK,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EACjEhB,EAAS,CAAC,EAAE,YAAcgB,EAAK,QAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC7Dd,EAAe,KAAM,cAAca,CAAK,CAC7C,EAAE,GAAI,CACT"}